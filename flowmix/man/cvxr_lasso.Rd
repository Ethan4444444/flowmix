% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mstep-solvers.R
\name{cvxr_lasso}
\alias{cvxr_lasso}
\title{Solve the no-intercept lasso problem using CVXR. This is not a general lasso
function, but designed for the beta M step of the EM algorithm. The response
is a (dimdat T) vector, and the covariate matrix is a ((dimdat T) x (dimdat
p)). This solves the optimization and organizes+returns the optimization
variable as a ((p+1) x dimdat) matrix.}
\usage{
cvxr_lasso(
  y,
  X,
  lambda,
  Xorig = NULL,
  exclude.from.penalty = NULL,
  thresh = 1e-08,
  maxdev = NULL,
  dimdat,
  N,
  ecos_thresh = 1e-08,
  scs_eps = 1e-05
)
}
\arguments{
\item{y}{Response vector.}

\item{X}{Covariate matrix.}

\item{lambda}{Regularization parameter.}

\item{maxdev}{Radius of ball constraint. Defaults to NULL.}
}
\value{
Fitted beta matrix.
}
\description{
\deqn{\min_{\beta} 1/2 \|y - X\vect(\beta)\|^2 + \lambda \|\beta\|_1}
}
\details{
In addition, this includes other modifications such as the ball constraint
on the means over time, whose radius is limited to be \code{maxdev}.

Internally, it tries an ECOS solver first, then it tries a SCS solver. The
latter is supposedly faster (and less exact) for larger problems, but I
haven't seen that in our application FYI.
}
