# Generated by roxygen2: do not edit by hand

S3method(predict,flowmix)
S3method(print,flowmix)
export("%ni%")
export(Estep)
export(add_cluster_label)
export(add_date_ticks_from_dates)
export(bin_many_cytograms)
export(bin_one_cytogram)
export(bin_plot_2d)
export(collapse_3d_to_1d)
export(collapse_3d_to_2d)
export(cv.flowmix)
export(cv_aggregate)
export(cv_summary)
export(draw_membership)
export(flowmix)
export(flowmix_once)
export(gate)
export(generate_data_1d_pseudoreal)
export(generate_data_generic)
export(get_best_match_from_kl)
export(get_frequency)
export(get_index_by_clust)
export(get_max_lambda)
export(get_residuals)
export(logspace)
export(make_cv_folds)
export(make_cv_folds_subsample_with_original_membership)
export(make_grid)
export(make_iimat)
export(make_iimat_small)
export(objective)
export(objective_newdat)
export(one_job)
export(one_job_refit)
export(plot_1d)
export(plot_2d)
export(plot_2d_threepanels)
export(plot_3d)
export(plot_covariates)
export(plot_cvscore)
export(plot_prob)
export(plot_ylist)
export(reorder_clust)
export(reorder_kl)
export(scatterplot_2d)
export(sym_diff)
import(CVXR)
import(Rcpp)
import(RcppArmadillo)
import(RcppEigen)
import(dplyr)
importFrom(MASS,mvrnorm)
importFrom(Rcpp,sourceCpp)
importFrom(abind,abind)
importFrom(ellipse,ellipse)
importFrom(glmnet,coef.glmnet)
importFrom(glmnet,glmnet)
importFrom(magrittr,"%>%")
importFrom(sn,rsn)
useDynLib(flowmix)
useDynLib(flowmix, .registration = TRUE)
